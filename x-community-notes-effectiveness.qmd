---
title: 'Effectiveness and Systematic Constraints of Community Notes'
subtitle: 'A Quantitative Analysis of Misinformation Intervention on X During the 2024 U.S. Election'
author: 'Jeff Parks, CUNY DATA 698 Research Project'
date: 'May 13, 2025'
editor: visual
execute:
 echo: true
 eval: true
 include: true
 message: false
 warning: false
format:
 html:
  code-fold: true
  code-line-numbers: true
  css: custom.css
  fig-width: 4
  fig-height: 4
  fontsize: '12'
  toc: true
  toc-depth: 3
  toc-title: 'Contents'
 # pdf: 
 #  code-line-numbers: true
 #  fig-width: 4
 #  fig-height: 4
 #  toc: true
 #  toc-depth: 2
 #  toc-title: 'Contents'
bibliography: ../../assets/references.bib
---

```{r}
## import libraries
library(conflicted)
library(corrr)
library(mice, warn.conflicts = FALSE)
library(patchwork)
library(quantreg)
library(ranger)
library(tidyverse)
library(tidymodels)

# prefs
conflict_prefer('filter','dplyr')
conflict_prefer('select','dplyr')
set.seed(40)

# ggplot
custom_theme <- theme_minimal() + theme(plot.title = element_text(size = 12))
theme_set(custom_theme)

## Data load

# csv
df_notes <- read_csv('data/df_notes.csv')
df_tweets_sum <- read_csv('data/df_tweets_sum.csv')
df_nicenames <- read_csv('data/nicenames.csv')

# db
# library(duckdb)
# con <- dbConnect(duckdb(), dbdir='/Volumes/seagate_5tb/twitter.duckdb', read_only=TRUE)
# df_notes <- dbGetQuery(con, "select * from analysis.notes_ttp")
# df_tweets_sum <- dbGetQuery(con, "select * from analysis.tweets_all_summary")
# df_tweets_noted_sum <- dbGetQuery(con, "select * from analysis.tweets_noted_summary")
# dbDisconnect(con, shutdown = TRUE)

# save these to file for final paper
# write.csv(df_notes, 'data/df_notes.csv', row.names=FALSE)
# write.csv(df_tweets_sum, 'data/df_tweets_sum.csv', row.names=FALSE)

## Data prep for EDA

# initial feature select - unused features
drop_cols = c('nt_id','nt_summary','nt_author_id','nt_ts_created','twt_id','twt_author_id','twt_reply_author_id','twt_convo_id','twt_url','user_created_dt','nt_class_notmis_notoutdated','twt_is_retweet','nr_helpful_empathy','nr_helpful_ctxt_unique','nr_nothelpful_opinion_bias','nr_nothelpful_outdated','nr_nothelpful_offtopic','nt_created_min')

df_notes_all <- df_notes %>% select(-all_of(drop_cols)) 
df_notes_pub <- df_notes %>% filter(nt_publish == 1) %>% select(-all_of(drop_cols)) %>% select(-all_of('nt_publish'))
df_notes_unpub <- df_notes %>% filter(nt_publish == 0) %>% select(-all_of(drop_cols)) %>% select(-all_of('nt_publish'))
```

# Abstract

*This study examines the effectiveness of X's Community Notes as a community-driven intervention against misinformation during the 2024 U.S. Presidential Election. Quantitative analysis of 38.5 million election-related posts and 13,745 Community Notes, identified both strengths and limitations in the program's implementation. The median publication time of 8.7 hours was relatively prompt, though with extreme variability (SD 158.7). Quantile regression revealed that time-to-publication varied systematically by observable factors: some logically (posts classified as misinformation published faster) while others appeared counterproductive (rater agreement on lower-quality notes associated with shorter publication times than those with reliable sources). Rater participation emerged as one of the strongest factors affecting publication speed, aligning with the platform's acknowledged challenges of data sparsity and resulting score instability. However, overall program coverage remained minimal, with only 0.014% of posts receiving Notes and just 4% of submitted Notes ever reaching publication status. These findings suggest systemic constraints significantly limit the potential effectiveness of community-driven interventions at platform scale, particularly during critical periods like elections.*

# 1. Introduction

The proliferation of misinformation on social networks has emerged as a significant societal concern, posing risks not only to individual users but also to public discourse, democratic institutions, and brand safety. While platforms are required to act against clearly illegal content, a more complex challenge lies in moderating content that is legal yet harmful. This includes false or misleading claims about elections, health, and personal data that fall short of illegality but may still inflict substantial harm.

Historically, most social media platforms relied on centralized moderation systems. These included internal trust and safety teams, third-party fact-checking partnerships, and automated detection systems trained on curated ground truth. However, in recent years, several platforms have scaled back or entirely eliminated these centralized interventions in favor of what are termed community-driven interventions (CDIs). In CDIs, content moderation decisions are crowd-sourced to the user base, leveraging democratic participation rather than institutional expertise.

While community-driven models have shown notable success in certain contexts—most famously on Wikipedia—the shift raises important questions when applied to platforms with vastly different engagement structures and incentives. Unlike Wikipedia, which rewards stability and authoritativeness, platforms like X (formerly Twitter), Meta, and TikTok optimize for virality, user retention, and advertising revenue. These dynamics create potential tensions between platform goals and the integrity of the information ecosystem.

# 2. Research Questions

This study defines community-driven interventions (CDIs) as moderation actions initiated or executed by non-professional platform users, including flagging, reporting, annotating, voting, and commenting with corrective information. The core outcome of interest is whether such interventions reduce the **spread, visibility, or impact** of misinformation.

Based on the literature and observed platform behaviors, this study proposes to explore one or more of the following Research Questions:

-   **RQ1: Do CDIs significantly impact user perceptions and behavior towards misinformation on a given platform?**

-   **RQ2: Do CDIs impact a significant majority of user engagements and exposure to misinformation on a given platform?**

-   **RQ3: Are there procedural or systemic constraints impacting CN speed and effectiveness on a given platform?**

# 3. Related Work

Research underscores the need for fast and impactful intervention programs on social media due to the viral and often sensational nature of misinformation. However, it is unclear what impacts CDI programs actually have on end-user perceptions and behavior, and there may be concerns around the structure and makeup of participant pools for these community-driven programs.

-   **Misinformation and "novel content" may be inherently more viral and impactful than truthful content.**

    A comprehensive MIT study of X (formerly Twitter) news stories from 2006 to 2017 demonstrated how fake and sensational narratives outpaced truthful ones. "Falsehood diffused significantly farther, faster, deeper, and more broadly than the truth in all categories of information, and the effects were more pronounced for false political news than for false news about terrorism, natural disasters, science, urban legends, or financial information. We found that false news was more novel than true news, which suggests that people were more likely to share novel information." [@vosoughi2018]

-   **CDI impacts on end-user perceptions and behavior are not well-understood, even when interventions are of good quality.**

    In an April 2024 research letter published in the *Journal of the American Medical Association*, titled "Characteristics of X (Formerly Twitter) Community Notes Addressing COVID-19 Vaccine Misinformation," the authors describe a robust application of Community Notes (CNs) in response to vaccine-related misinformation. The study found that CNs primarily addressed adverse events and conspiracy theories, were accurate, cited moderate to high credibility sources, and were attached to posts viewed hundreds of millions of times.\
    \
    However, the authors explicitly state that their study only assessed *note quality*, not effects on user perception or behavior. The study also did not address the timing of these interventions, or the proportions of those views that occurred post-intervention.[@allen2024]

-   **CDI participant pools may be animated by political identity and other biases.\
    \
    **Political partisanship has also been identified as a significant factor influencing CDI effectiveness on X. A 2022 paper from MIT found clear evidence that Birdwatch (now known as Community Notes) users preferentially challenged content from political opponents.[@allen2022]\
    \
    Research has also demonstrated that X "Blue" premium accounts, while constituting only 12% of the userbase, were responsible for 74% of all misinformation posts in the opening weeks of the most recent Israeli-Palestinian conflict. ".. just 79 of the 250 posts advancing misinformation about the war were flagged by the platform with a Community Note ...a note appeared approximately 32 percent of the time on some of the platform’s most prominent and harmful misinformation posts." [@brewster2023]

# 4. Background

## 4.1 X Community Notes

### Program Background

Community-Driven Interventions, or CDIs, represent a shift from centralized platform moderation to crowd-sourced approaches.

X Community Notes launched in 2021 as "Birdwatch" and combines user-generated fact checking with complex algorithmic approaches to publish only those Notes that achieve a broad consensus between approved program participants.

-   Approved program participants create Community Notes on posts they believe contain misleading information, adding context and classifying content as potentially misleading or not, with their reasoning and sources.

-   Other program participants (who must have a sufficient "rating impact" score) then rate these Community Notes as Helpful/Not Helpful based on whether they provide valuable context.

-   X's algorithms use these ratings to calculate an overall "helpfulness score" for each Community Note, identifying those that earn consensus across users with diverse rating histories (e.g., "people who normally disagree found this Note helpful").

-   Only Community Notes that reach a sufficient helpfulness threshold from opinion-diverse raters are publicly displayed on posts.

-   The presence of a Community Note on a given post does not restrict the post from public view or interfere with any of the engagement tools (likes, reposts, etc.)

# 5. Datasets

Due to data availability and resource limitations, this study focuses specifically on X user activity and the performance of their Community Notes program during the 2024 U.S. Presidential Election.

## 5.1 X Posts (Tweets)

**The 2024 Election Integrity Initiative** at USC publishes a curated, publicly available dataset of X posts (tweets) related to the 2024 US Presidential Election. [@balasubramanian]

This dataset was retrieved on March 1, 2025, and converted from CSV to Parquet. Dataset was then loaded into a persistent database using DuckDB, reducing total storage size from 45GB to 27GB and enabling reasonable database performance on consumer hardware.

Available fields include original post ID, author ID and account details, replied-to or mentioned author IDs, text content, hashtags, links to media content, views and other engagement metrics. See Appendix 9.1 for a data dictionary of the composite table `analysis.notes_ttp`.

## 5.2 X Community Notes

X maintains a public repository of Community Notes data featuring annotated user-generated Notes with timestamps, contributor metadata, community ratings and algorithmically determined publishing status. [@xcommun2025]

All four Community Notes datasets (**Notes**, **Ratings**, **Note Status History** and **User Enrollment**) were retrieved on February 22, 2025, and converted from CSV to Parquet. Datasets were then loaded into a persistent database using DuckDB, reducing total storage size from 30GB to 4GB (high sparsity) and enabling reasonable database performance on consumer hardware.

Two main sets of Community Note metrics were analyzed for this study, Post Classifications and Note Ratings. See Appendix 9.1 for a data dictionary of the composite table `analysis.notes_ttp`.

### Post Classifications

Designated by the Community Note author, classifying whether the attached Post is misinformation / misleading, with subcategories for additional context. These are expressed as Boolean in the dataset.

+------------------------+------------------------+
| Post is Not Misinfo\   | Post is Misinfo\       |
| (nt_class_misinfo = 0) | (nt_class_misinfo = 1) |
+========================+========================+
| Media Manipulation     | Factually Correct      |
+------------------------+------------------------+
| Misleading             | Not Outdated           |
+------------------------+------------------------+
| No Context             | Opinion                |
+------------------------+------------------------+
| Not Factual            | Other                  |
+------------------------+------------------------+
| Outdated               | Satire                 |
+------------------------+------------------------+
| Satire                 |                        |
+------------------------+------------------------+
| Unverified             |                        |
+------------------------+------------------------+

### Note Ratings

Designated by Community Note program users, classifying whether the attached Community Note is **Helpful**, **Somewhat Helpful** or **Not Helpful** with subcategories for additional context. These are expressed as Boolean in the original data, but here counts are aggregated and expressed as proportions per Note (since the total number of ratings per Note can vary widely.)

+------------------------+--------------------------+
| Note is Not Helpful    | Note is Helpful /\       |
|                        | Note is Somewhat Helpful |
+========================+==========================+
| Argumentative          | Addresses Issue          |
+------------------------+--------------------------+
| Biased Opionion        | Clear                    |
+------------------------+--------------------------+
| Factually Incorrect    | Important Context        |
+------------------------+--------------------------+
| Hard to Understand     | Shows Empathy            |
+------------------------+--------------------------+
| Missing Information    | Trustworthy Sources      |
+------------------------+--------------------------+
| Off Topic / Irrelevant | Unbiased                 |
+------------------------+--------------------------+
| Outdated               |                          |
+------------------------+--------------------------+
| Spam                   |                          |
+------------------------+--------------------------+
| Speculation            |                          |
+------------------------+--------------------------+
| Untrustworthy Sources  |                          |
+------------------------+--------------------------+

### 5.3 A Note on Algorithms

While an analysis of the Community Note open-source algorithms are outside the scope of this study, a review of the [documentation](https://communitynotes.x.com/guide/en/under-the-hood/ranking-notes) is suggested, especially as they pertain to some of the findings. [@noteran2025]

-   **Data Sparsity:** The main algorithm is essentially a sparse-matrix recommender, stemming from the low participation rates by Community Notes raters. The authors acknowledge "most raters do not rate most notes - and this sparsity leads to outliers and noise in the data." Their solution is described as "higher regularization", but the continued layering of additional models (Expanded Consensus, Net Helpful Minimums) suggests this problem remains challenging.

-   **Scoring Instability:** This data sparsity also contributes to instability of Community Note scores over time and is specifically addressed in the documentation: "...newer notes are able to receive more ratings from a wider range of contributors while the available ranking data for older notes remains more limited. As older data comprise an increasingly small fraction of the dataset, ranking results have tended to fluctuate, and some notes have lost Helpful status.". Additional model layers (Scoring DriftCard) and "status locking" have been added to address this issue, but the data show this likely remains a problem.

-   **Binary Decision Spaces**: One of the unique properties of the Community Note algorithms is to attempt "bridging" and building consensus among Raters with different political and social viewpoints, as represented by their individual rating histories. However, the documentation seems to acknowledge the computational difficulty at present of expanding into multidimensional viewpoint factors. "...for now, to avoid overfitting on our very small dataset, we only use 1-dimensional factors. We expect to increase this dimensionality as our dataset size grows significantly."

# 6. Time-to-Publication Analysis

## 6.1 Experiment Design

Prior work has suggested that the time-to-publication (TTP) of Community Notes interventions on X may be unacceptably long, blunting the potential impact of these interventions. This analysis will group CNs by their elapsed time between inception and publication and attempt to identify those characteristics associated with shorter and longer publish times. Possible factors may include post topics and subtopics, author account size and reach, post timing, post and reply content and sentiment, and measures of polarization / disagreement within the CN ratings data that may impact the algorithmically determined publish status.

-   **Research Question 3:** Are there procedural or systemic constraints impacting CN speed and effectiveness on a given platform?

-   **Hypothesis:** CN time-to-publication varies systematically by observable factors (e.g., topic, account influence, timing, polarization of CN rater agreement), implying procedural or systemic constraints.

-   **Experiment Design:**

    -   ANOVA Difference of Means, Linear, GLM or Robust Regression, Quantile Regression, Non-Parametric Models.

        -   Target Variable: $T_{pub}=TS_{CNpub} - TS_{post}$

        -   Predictors: Community Note classifications, Community Note user ratings, Post engagement metrics and metadata, Post Author metadata, Custom Polarization metrics.

-   **Constraints:** Several data-related limitations shaped the extent and types of analysis carried out in this study:

    -   **Aggregated Engagement Metrics** in the Twitter Firehose API data make timeseries-based analysis such as Cascades [@vosoughi2018] difficult.

    -   **Limited Access** to the Twitter Firehose API due to increased costs restricted this study to datasets already obtained by other researchers.

    -   **Additional scraping** of replies or user profiles may be challenging to perform at scale due to resource and processing constraints.

### 6.1.1 Custom Metrics

Several custom metrics are proposed to help quantify the aggregate CN ratings and levels of agreement/disagreement (polarization) between members of the CN ratings user base:

+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Mean Helpfulness Score                                                                                                                                                                                                     |
+============================================================================================================================================================================================================================+
| $$M  = \frac{(1×H)+(0.5×S)+(−1×N)}{H+S+N}$$                                                                                                                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Applied to the aggregated ratings on an individual Community Note, this metric indicates whether users found the CN helpful on average. A simple weighted average with numeric values assigned to each CN rating category: |
|                                                                                                                                                                                                                            |
| **(H)**elpful = +1.0\                                                                                                                                                                                                      |
| **(S)**omewhat Helpful = +0.5\                                                                                                                                                                                             |
| **(N)**ot Helpful = -1.0                                                                                                                                                                                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Polarization Index - Standard (Ps)                                                                                                                                                                                                                                  |
+=====================================================================================================================================================================================================================================================================+
| $$P_S= \frac{1}{2} \sqrt{\frac{(H⋅(1−ABS(M))^2)+(S⋅(0.5−ABS(M))^2)+(N⋅(−1−ABS(M))^2)}{H+S+N}}$$                                                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| An index of opinion polarization of individual CNs based on the spread of their aggregated ratings. If ratings are **all in one category**, there's no disagreement (low polarization). If ratings are **evenly split between extremes**, the polarization is high. |
|                                                                                                                                                                                                                                                                     |
| Normally an index 0-1, but I halve the final result for an index from 0 (no polarization) to 0.5 (perfect polarization). More interpretable as "% of total population in disagreement". Uses the Mean Helpfulness Score (M).                                        |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

## 6.2 Data Exploration

Initial exploration of the two datasets revealed several major insights:

**Community Notes impact a very small percentage (\~0.02%) of posts on the platform.**

-   Of 38.5M election-related posts in this dataset, only 5,551 (0.014%) received one or more notes.

-   Although a current metric of misinformation on the platform is not readily available, this percentage seems rather low given the typical user experience and general prevalence of this content, especially during the 2024 election.

**Only 4% of all submitted Community Notes have ever been published; 96% remain hidden from the general public.**

-   Of the 13,745 election-related notes, only 585 (4.3%) were ever published (classified Helpful) at some point. 12,238 (89%) were still classified "Need More Votes" (NMR) three months after the November 2024 election.

**The median Community Note time-to-publish (TTP) is 8.7 hours, but with a great degree of variation (Mean 35.8 and SD 158.7)**

```{r}
#| fig-width: 8
#| fig-height: 5
df_notes_pub %>%
  mutate(ttp_hrs = nt_publish_min/60) %>%
  # filter(ttp_hrs < 500) %>%
  ggplot(aes(x=ttp_hrs)) +
  geom_histogram(bins=30, alpha=0.5, color='black') +
  geom_vline(aes(xintercept = quantile(ttp_hrs, 0.25)), color='grey', linetype='dotted', size=1) +
  geom_vline(aes(xintercept = quantile(ttp_hrs, 0.50)), color='green', linetype='dotted', size=1) +
  geom_vline(aes(xintercept = quantile(ttp_hrs, 0.75)), color='grey', linetype='dotted', size=1) +
  geom_vline(aes(xintercept = quantile(ttp_hrs, 0.82)), color='grey', linetype='dotted', size=1) +
  annotate("text", x = quantile(df_notes_pub$nt_publish_min/60, 0.50), y = 80, label = '50%', vjust = -0.5, hjust = -.25) +
  annotate("text", x = quantile(df_notes_pub$nt_publish_min/60, 0.83), y = 80, label = '83%', vjust = -0.5, hjust = -.25) +
  scale_x_continuous(
    trans = 'log1p',
    labels = scales::label_number(),
    breaks = c(1, 2, 4, 8, 12, 18, 24, 36, 48, 72, 100, 200, 500, 1000, 2000)
  ) +
  labs(title = "Notes - Time-to-Publish Distribution (log)", x = "Hrs", y = "Count") +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) 
```

-   83% of Community Notes that reach an initial Publish status do so within 24 hours.
-   The distribution of our response variable TTP is extremely right-skewed.

**Community Notes classifications can be unstable - over 36% of classified Notes have had their status changed, including 38% of all published notes.**

-   Of 1,507 election-related notes successfully classified as either "Helpful" or "Not Helpful", 554 (36.8%) had their status changed back to NMR.

-   Of the 585 notes ever published ("Helpful"), 224 (38%) later had their public status revoked.

-   Only 261 (2.6%) of all notes created remain published ("Helpful").

**The Community Notes program was essentially disabled for the entire month of August 2024.**

-   After a rapid increase in program activity in prior months, Community Notes submissions halted abruptly at the end of July 2024 and no notes were published until September 1, when activity suddenly resumed (though at reduced levels.)

```{r}
#| fig-width: 8
#| fig-height: 4
df_notes_publish_dt <- df_notes %>% 
  mutate(nt_dt_created = as.Date(nt_ts_created)) %>%
  group_by(nt_dt_created) %>%
  summarize(note_count = n(), notes_published = sum(nt_publish)) %>%
  mutate(pct_publish = round(notes_published/note_count,2)) %>%
  arrange(nt_dt_created)

scale = 0.0005

df_notes_publish_dt %>%
  mutate(date = as.Date(cut(as.Date(nt_dt_created), breaks = "7 days"))) %>%
  group_by(date) %>%
  summarize(note_count = sum(note_count), notes_published = sum(notes_published)) %>%
  mutate(pct_publish = notes_published / note_count) %>%
  ggplot(aes(x = date)) +
  # Transparent red rectangle for August
  annotate("rect",
           xmin = as.Date("2024-08-01"),
           xmax = as.Date("2024-08-31"),
           ymin = -Inf,
           ymax = Inf,
           alpha = 0.2,
           fill = "red") +
  geom_col(aes(y = note_count), fill = 'grey30', alpha = 0.5) +
  geom_line(aes(y = pct_publish / scale), color = 'orange2', size = 0.5) +
  scale_y_continuous(
    name = "Note Count",
    sec.axis = sec_axis(trans = ~ . * scale, name = "Pct Publish"))
```

**Blue (Premium) Users accounted for 75% of all Community Noted posts, despite being 12% of the overall user base.**

-   Blue users made up 75% of all authors with Community Noted posts (1,700 of 2,264 unique user ids.)

-   Blue users make up only 11.6% of the total user accounts represented the raw posts data (439k of 4.2M user ids)

-   While not analyzed further here, this appears to agree with research suggesting that Blue users were the primary drivers of misinformation on X during recent crises. [@brewster2023]

## 6.3 Data Modeling & Analysis

### 6.3.1 Quantile Regression

Both **Linear** and **Robust Regressions** were initially fit with log-transformation on the response, normalization of the predictors and handling of multi-collinearity but the resulting models were unstable and failed to explain a significant proportion of the variance in the Time-to-Publish (TTP) response variable.

As noted above the relationships of the predictors to the TTP response are highly noisy, non-linear and include many extreme values that are difficult for linear models. However, since these outliers are part of the topic of interest and are arguably not drawn from a different distribution, approaches are required to deal with these conditions while retaining interpretability.

**Quantile Regression** was selected instead to examine feature importance and marginal effects of the predictors at various quantiles of the TTP response variable, while handling the distribution skew and outliers more effectively. For this model the log-transformation was applied to the response, predictors were normalized, and multi-collinearity was handled by removing aliases and features with over 85% collinearity while retaining as much interpretability as possible.

```{r}
#| fig-width: 8

# prep data for modeling
df_mod <- df_notes_pub %>%
  select(-all_of(c('nt_status_current','nt_status_changed', 'nt_publish_revoked', 'nt_publish_revoked_min'))) %>%
  mutate(twt_lang = as.factor(twt_lang))

# inpute twt_views
imp <- mice(df_mod, maxit = 5, m = 5, print = FALSE, 
  predictorMatrix = {
    pm <- make.predictorMatrix(df_mod)
    pm[,] <- 0
    pm["twt_views", c("twt_replies", "twt_retweets", "twt_likes", "twt_quotes","user_follower_ct","user_friend_ct")] <- 1
    pm
  })

# stripplot(imp, twt_views, pch = 19, xlab = "Imputation number")
df_mod_imp <- complete(imp, action = 2)

## multicolliearity

# check for aliases (duplicate or linearly dependent columns)
df_alias <- alias(lm(nt_publish_min ~ ., data = df_mod_imp))
# remove 'nt_class_notmis_opinion','nr_rating_helpful_not','nr_mean_agg'

# check for high correlations
c_df_mod_imp <- correlate(df_mod_imp)
# c_df_mod_imp %>% shave(upper=FALSE) %>% rplot()

cor_long <- c_df_mod_imp %>%
  pivot_longer(cols = -term, names_to = "variable", values_to = "correlation") %>%
  filter(!is.na(correlation), abs(correlation) >= 0.85) %>%
  filter(term != variable) %>%
  rowwise() %>%
  mutate(pair = paste(sort(c(term, variable)), collapse = "_")) %>%
  ungroup() %>%
  distinct(pair, .keep_all = TRUE) %>%
  select(term, variable, correlation)

# cor_long
# remove polar_std, polar_entropy, ratings_agg, nr_nothelpful_missing, nr_nothelpful_nnn

# manual selection
df_mod_imp <- df_mod_imp %>%
  select(-any_of(c('nt_class_notmis_opinion', 'nr_rating_helpful_not', 'nr_mean_agg', 'nr_polar_std', 'nr_polar_entropy', 'nr_ratings_agg', 'nr_nothelpful_missing', 'nr_nothelpful_nnn')))

# quantile regression
qr_recipe <- 
  recipe(nt_publish_min ~ ., data = df_mod_imp) %>%
  step_log(all_outcomes()) %>%
  step_normalize(all_numeric_predictors()) %>%
  step_dummy(twt_lang)

# df for qr
df_qr_prep <- prep(qr_recipe, training = df_mod_imp) %>% bake(new_data=NULL)

# fit qr on quartiles
qr_mod1 <- rq(nt_publish_min ~ ., tau = c(0.25, 0.5, 0.75, 1.0), data = df_qr_prep)

# bootstrap SEs
qr_results <- summary(qr_mod1, se = "boot", R = 1000)

# function to back-transform based on log response
func_qr_back <- function(df){
  df %>%
    rownames_to_column() %>%
    mutate(`Std. Error` = exp(Value) * `Std. Error`, # goes first
            Value = ifelse(rowname == '(Intercept)', -exp(Value), exp(Value)-1), 
            `t value` = Value / `Std. Error`, 
            ci_lo = Value - 1.96 * `Std. Error`, 
            ci_hi = Value + 1.96 * `Std. Error`)}

# back-transform and join tables
df_qr_q25 <- as.data.frame(qr_results[[1]]$coefficients) %>%
  func_qr_back %>%
  rename(val_25 = 2, se_25 = 3, t_25 = 4, p_25 = 5, ci_lo_25 = 6, ci_hi_25 = 7)
  
df_qr_q50 <- as.data.frame(qr_results[[2]]$coefficients) %>% 
  func_qr_back %>%
  rename(val_50 = 2, se_50 = 3, t_50 = 4, p_50 = 5, ci_lo_50 = 6, ci_hi_50 = 7)

df_qr_q75 <- as.data.frame(qr_results[[3]]$coefficients) %>% 
  func_qr_back %>%
  rename(val_75 = 2, se_75 = 3, t_75 = 4, p_75 = 5, ci_lo_75 = 6, ci_hi_75 = 7)

df_qr_q100 <- as.data.frame(qr_results[[4]]$coefficients) %>% 
  func_qr_back %>%
  rename(val_100 = 2, se_100 = 3, t_100 = 4, p_100 = 5, ci_lo_100 = 6, ci_hi_100 = 7)

df_qr_results <- 
  Reduce(function(x, y) left_join(x, y, by = 'rowname'), list(df_qr_q25, df_qr_q50, df_qr_q75, df_qr_q100)) %>%
  mutate(sum_p = rowSums(select(., starts_with("p_")))) %>%
  left_join(df_nicenames)

# graphs

# function for qr graphs
func_qr_graphs <- function(df, var) {
  df_var <- df %>% filter(rowname == var)
  nicename <- unique(df_var$nicename)

  df_var %>%
    select(any_of(starts_with(c('val_','ci_','p_')))) %>%
    pivot_longer(cols = everything(),
                 names_to = c(".value", "quantile"),
                 names_pattern = "(.*)_(\\d+)") %>%
    mutate(
      quantile = as.numeric(quantile),
      color = case_when(p <= 0.05 ~ "green",
                        p > 0.05 & p <= 0.10 ~ "yellow",
                        p > 0.10 & p <= 0.20 ~ "orange",
                        TRUE ~ "red")) %>%
    ggplot(aes(x = quantile, y = val)) +
      geom_line() +
      geom_ribbon(aes(ymin = ci_lo, ymax = ci_hi), alpha = 0.2) +
      geom_point(aes(color = color), size = 3) +
      geom_text(aes(label = paste0(round(val * 100, 0), "%")), vjust = -1.2, size = 3) +
      geom_hline(yintercept = 0, linetype = "dashed") +
      scale_color_identity() +
      scale_x_continuous(breaks = c(25, 50, 75, 100)) +
      labs(x = "Quantile", y = "Value", title = nicename)
    }
```

#### Model Coefficients

The resulting coefficients were back-transformed to original scale and may be interpreted as having a multiplicative relationship with the response variable, **Time to Publish (TTP)**, holding all other variables constant.

For example, a **+10%** point estimate for a given variable and quantile indicates that for a 1-unit increase in the variable (whether a proportion, a count, or a True condition for a Boolean) we may expect a **10% marginal increase** in TTP, holding all other variables constant.

Likewise, a **-10%** point estimate indicates a 1-unit increase in the variable would be associated with a **10% marginal decrease** in TTP, holding all other variables constant.

+-----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| Quartiles and TTP                                                                       | Significance Levels                                                                                                  |
+=========================================================================================+======================================================================================================================+
| TTP distribution is extremely right-skewed. Median TTP is 8.7 hours (Mean 35.8, SD 159) | Individual estimates at all levels of significance are included in the graphs, but should be considered accordingly: |
+-----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| -   **First Quartile (p25):** \<= 4.7 hrs                                               | -   **Green** for p \<= 0.05 (high significance)                                                                     |
|                                                                                         |                                                                                                                      |
| -   **Second Quartile (p50):** \<= 8.7 hrs                                              | -   **Yellow** for p \> 0.05 and \<= 0.10 (moderate high)                                                            |
|                                                                                         |                                                                                                                      |
| -   **Third Quartile (p75):** \<= 18 hrs                                                | -   **Orange** for p \> 0.10 and \<= 0.20 (moderate low)                                                             |
|                                                                                         |                                                                                                                      |
| -   **Fourth Quartile (p100):** \> 18 hrs                                               | -   **Red** for p \> 0.20 (low significance)                                                                         |
+-----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+

#### Post Classification

Post Classifications are assigned by the Community Note authors, categorizing the attached posts as Misinfo or Not Misinfo, along with related subcategories. These are expressed as Booleans.

```{r}
#| fig-width: 8
#| fig-height: 8
# note classification
top_qr_rows <- df_qr_results %>%
  filter(str_starts(rowname, "nt_")) %>%
  arrange(sum_p) %>%
  slice_head(n = 12) %>%
  pull(rowname)

plots <- lapply(top_qr_rows, function(row) func_qr_graphs(df_qr_results, row))
wrap_plots(plots, ncol = 3, heights=5) 
```

**Shorter TTP**

-   **Is Media Note:** Notes that address specific **media** attached to a Post (images, videos) rather than the Post content itself seem to have a consistent and significant association with shorter TTP. In fact, this effect increases at higher quartiles, suggesting this format may be beneficial for Notes that may otherwise be delayed by other factors.

-   **Misinfo:** Posts broadly categorized as **Misinfo** or Misleading are consistently associated with dramatically shorter TTP (-50%+), though most of these estimates have low significance. This effect is the highest and most significant in the top quartile.

**Longer TTP**

-   **Misinfo - Not Factual:** Posts categorized as **Misinfo - Not Factual** are consistently associated with longer TTP, most significantly in the first quartile (+35%) and last quartile (+89%). This seems at odds with the broader parent classification **Misinfo** and could indicate dynamics such as greater disagreement between high-scoring raters over factual correctness, or simply a lower degree of rater engagement on this particular subtopic.

-   **Misinfo - Media Manipulation:** Posts categorized as containing manipulated media (deepfakes, doctored footage) had a strong and moderately significant effect in the first quartile (+36), with decreasing effects for greater quartiles. Whether this is due to greater disagreement or lower rater engagement with the subtopic, the effect seems to largely impact Notes published within the first 24 hours.

#### Note Ratings

Note Ratings are assigned by users that participate in the Community Notes program. Expressed as proportions of total ratings per Note.

```{r}
#| fig-width: 8
#| fig-height: 8
# note ratings
top_qr_rows <- df_qr_results %>%
  filter(str_starts(rowname, "nr_")) %>%
  arrange(sum_p) %>%
  slice_head(n = 12) %>%
  pull(rowname)

plots <- lapply(top_qr_rows, function(row) func_qr_graphs(df_qr_results, row))
wrap_plots(plots, ncol = 3, heights=5) 
```

**Shorter TTP**

-   **Ratings Count:** Similar to **Is Media Note**, this factor seems consistently effective and significant across all quartiles, outlining that increased Rater interest and participation in the process helps reduce TTP for any given Note.

-   **Not Helpful - Incorrect:** Notes that are rated Not Helpful due to factual errors are associated with shorter TTP, with the effect increasing at higher quartiles.

    -   This is one of the more counter-intuitive findings of the model, in which rater agreement on **lower-quality notes** is associated with **shorter** TTP, not longer.

-   **Helpful - Some** and **Helpful - Addresses Issue:** Both ratings are associated with decreases in TTP, with effects and significance generally increasing at higher quartiles.

**Longer TTP**

-   **Helpful - Source Reliable:** Notes rated as drawing on reliable sources are associated with longer TTP, increasing over greater quartiles with a large and highly significant effect (+170%) in the last quartile.

    -   This is another counter-intuitive finding in which rater agreement on **higher-quality notes** is associated with **longer** TTP, not shorter.

-   **Not Helpful - Opinion:** Notes rated as Opinion are associated with longer TTP, though at low significance levels.

#### Post Language

Post Language is expressed as a Boolean.

```{r}
#| fig-width: 8
#| fig-height: 8
# post language
top_qr_rows <- df_qr_results %>%
  filter(str_starts(rowname, "twt_lang")) %>%
  arrange(sum_p) %>%
  slice_head(n = 12) %>%
  pull(rowname)

plots <- lapply(top_qr_rows, function(row) func_qr_graphs(df_qr_results, row))
wrap_plots(plots, ncol = 3, heights=5) 
```

-   **Post Language:** While significance levels were variable, nearly all Language classifications shared similar effects with increasing TTP and uncertainty towards higher quartiles. However Polish-language posts are the exception with decreasing TTP and stronger significance toward higher quartiles.
    -   One possible hypothesis could be the presence of a relatively active community of Polish-language raters and/or better participation levels due to a relatively smaller proportion of Polish-language tweets.

#### Post Engagement

Post Engagement effects tend to be on a smaller scale since they are based on counts rather than categoricals or overall proportions.

```{r}
#| fig-width: 8
# post engagement
top_qr_rows <- df_qr_results %>%
  filter(str_starts(rowname, "twt_")) %>%
  filter(!str_starts(rowname, "twt_lang")) %>%
  arrange(sum_p) %>%
  slice_head(n = 12) %>%
  pull(rowname)

plots <- lapply(top_qr_rows, function(row) func_qr_graphs(df_qr_results, row))
wrap_plots(plots, ncol = 3, heights=5) 
```

**Longer TTP in Lower Quartiles**

-   Post **Replies**, **Views**, **Retweets** and Posts that are **Quotes** are associated with slightly longer TTP in the early quartiles, and shorter TTP in the later quartiles.
    -   At first this relationship seems counter-intuitive; one might expect Posts with high levels of engagement to also have higher levels of Rater activity. However. for higher quartiles, more time has elapsed, and more Post engagement has likely accrued.

**Shorter TTP in Lower Quartiles**

-   Post **Likes** have the opposite effect of the other engagement metrics, associated with shorter TTP in the early quartiles, and longer TTP in the later quartiles.
    -   One possible explanation for the disparity is that Likes may be a more direct signal of user agreement than Replies, Views or even Retweets, and that the relative popularity of Posts in the earlier quartiles may correlate to increased Rater activity.
    -   This could also be an effect of a recommendation algorithm that prompts Raters to respond to Notes; Likes may be one of many signals that trigger the prompt.

#### Post Author

Post Author metrics are expressed as counts except for **Author:Blue**, which is expressed as a Boolean.

```{r}
#| fig-width: 8
# post author
top_qr_rows <- df_qr_results %>%
  filter(str_starts(rowname, "user_")) %>%
  arrange(sum_p) %>%
  slice_head(n = 12) %>%
  pull(rowname)

plots <- lapply(top_qr_rows, function(row) func_qr_graphs(df_qr_results, row))
wrap_plots(plots, ncol = 3, heights=5) 
```

**Shorter TTP**

-   **Author - Blue:** Posts from premium "Blue" accounts were associated with significantly shorter TTP in the early quartiles. While this could be an effect of Blue posts receiving preferential, more frequent placement in user feeds, we might consider whether this supports research into Blue accounts driving a larger share of overall misinformation on the platform. [@brewster2023]
-   **Friend Count** and **Follower Count**: Both variables are associated with 5-10% shorter TTP in the first three quartiles, possibly correlated to Posts with larger followings and reach.

### 6.3.2 Random Forest

In addition to Quantile regression, I fit a random forest model to identify key features affecting Community Note time-to-publication. Using the `ranger` package with 1000 trees and impurity-based variable importance, the model achieved a fairly low $R^2$ of 0.15, confirming the dataset contains substantial variability that cannot be explained by the Post, Note and User variables alone.

Despite the weakness of the model, the feature importance rankings agreed in many instances with the Quantile regression, confirming the strong effects of Rating counts and Note Helpful classifications, while seeming to emphasize User Account and Post Engagement metrics more heavily.

```{r}
#| fig-width: 8

# random forest
rf_recipe <- 
  recipe(nt_publish_min ~ ., data = df_mod) %>%
  step_log(all_outcomes())

df_rf_prep <- prep(rf_recipe, training = df_mod) %>% bake(new_data=NULL)

# fit model
rf_fit <- rand_forest(mode='regression', trees=1000) %>%
  set_engine('ranger', importance='impurity') %>%
  fit(nt_publish_min ~ ., df_rf_prep)

rf_fit

# variable importance
rf_varimp <- data.frame(
  variable = names(rf_fit$fit$variable.importance),
  importance = round(rf_fit$fit$variable.importance,3)) %>%
  arrange(desc(importance))

ggplot(rf_varimp[1:10,], aes(x = reorder(variable, importance), y = importance)) +
  geom_col(fill='blue', alpha = 0.7) +
  coord_flip() +
  labs(title = "RF - Top 10 Variable Importances", x = NULL, y = "Importance")
```

## 6.4 Findings and Discussion

This data offers some support for the hypothesis that X Community Notes time-to-publication varies systematically based on observable factors. This analysis also outlines possible systemic constraints that affect its overall effectiveness as community-driven misinformation intervention tool, supporting other research and the program's own acknowledgments of technical and computational challenges.

**Key Coverage and Performance Metrics (2024 U.S. Presidential Election)**

-   Community Notes impacted only 0.014% of election-related posts. (5,551 out of 38.5M)

-   Only 4% of submitted Notes (585 of 13,745) ever reached publication status.

-   Median publication time was 8.7 hours, but with extreme variation. (Mean 35.8, SD 158.7.)

-   Status instability affected 36% of classified notes, with 38% of published notes later having their public status revoked.

-   Program activity halted entirely during August 2024, a critical pre-election period.

-   Blue (Premium) users were disproportionately represented, accounting for 75% of noted posts despite being only 12% of the user base.

**Systematic Factors Affecting Publication Speed**

Quantile regression revealed several statistically significant factors affecting TTP:

*Shorter TTP:*

-   Media-focused notes (addressing images/videos)

-   Notes classified misinformation (up to 50% reduction in TTP)

-   Higher rating counts (more rater participation)

-   Notes classified as Not Helpful - Incorrect

-   Accounts with higher follower and friend counts

*Longer TTP:*

-   Specifically categorized "Not Factual" content (+35% to +89%)

-   Posts with manipulated media (+36% in first quartile)

-   Counter-intuitively, notes rated as having reliable sources (+170% in last quartile)

**Technical and Operational Challenges**

The platform's documentation acknowledges several issues these findings appear to support:

-   Data sparsity ("most raters do not rate most notes")

-   Scoring instability (notes losing "Helpful" status over time)

-   Computational limitations in the consensus algorithms

-   Insufficient rater participation as a primary bottleneck

**Implications**

When evaluated against X's [own stated objectives](https://communitynotes.x.com/guide/en/about/introduction) for Community Notes, these findings indicate:

1.  The program struggles with systematic biases affecting which notes receive ratings and which topics reach consensus.

2.  While technically open-source, unexplained operational disruptions undermine transparency.

3.  The extremely limited coverage (0.014% of posts) and low publication rate (4% of notes) suggest the program falls far short of providing effective intervention at scale.

This minimal coverage suggests that users and brands remained exposed to potential misinformation with little protection from the Community Notes program during the 2024 U.S. Presidential Election.

While conceptually promising, the program in its current state appears inadequate to address the scale and complexity of misinformation, particularly during critical periods like elections. The systematic variations in publication speed and extremely low coverage rate suggest fundamental limitations that would need to be addressed for the program to serve as an effective intervention tool.

**Future Research Directions**

-   Analysis of Community Notes user base quality scores and participation rates on publish outcomes.

-   Qualitative assessment of the 96% of unpublished notes.

-   Measurement of intervention effects on user sentiment, behavior and networks.

-   Simulation testing with the open-source CN algorithms to identify bottlenecks.

-   Expansion of analyses to other misinformation-heavy topic areas (medical, finance, public emergencies, etc.)

## 6.5 Code and Data

-   This paper and all code used for data processing and analysis may be found at <https://github.com/jefedigital/social-cdi-effectiveness>.

-   The original **USC X 24 US election X Dataset** is hosted at <https://github.com/sinking8/usc-x-24-us-election>.

-   All **X Community Notes** datasets are publicly available at <https://x.com/i/communitynotes/download-data>.

# 9. Appendix

## 9.1 Data Dictionary: analysis.notes_ttp

+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| Column                          | Description                                                        | Column                         | Description                                       |
+=================================+====================================================================+================================+===================================================+
| **nt_id**                       | Unique Note ID                                                     | **nr_helpful_sources**         | Note Ratings - Helpful - Trustworthy Sources      |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_author_id**                | Unique Note Author ID                                              | **nr_helpful_ctxt_unique**     | Note Ratings - Helpful - Unique Context           |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_ts_created**               | Note Created (datetime)                                            | **nr_helpful_address**         | Note Ratings - Helpful - Addresses Issue          |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_is_medianote**             | Is Media Note (bool)                                               | **nr_helpful_ctxt_impt**       | Note Ratings - Helpful - Important Context        |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_created_min**              | Minutes between Tweet Created and Note Created                     | **nr_helpful_unbiased**        | Note Ratings - Helpful - Unbiased                 |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_status_current**           | Note Current Status (NMR, Published)                               | **nr_nothelpful_other**        | Note Ratings - Not Helpful - Other                |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_status_changed**           | Did Note Status ever change (bool)                                 | **nr_nothelpful_incorrect**    | Note Ratings - Not Helpful -Incorrect             |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_publish**                  | Was Note ever published (bool)                                     | **nr_nothelpful_source**       | Note Ratings - Not Helpful - Untrustworthy Source |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_publish_min**              | Minutes between Note Created and Note Published                    | **nr_nothelpful_opinion_bias** | Note Ratings - Not Helpful - Biased Opinion       |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_publish_revoked**          | Was Note Publish ever revoked (bool)                               | **nr_nothelpful_missing**      | Note Ratings - Not Helpful - Missing Information  |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_publish_revoked_min**      | Minutes between Note Published at Note Publish Revoked             | **nr_nothelpful_outdated**     | Note Ratings - Not Helpful - Outdated             |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_misinfo**            | Note classified Misinfo (bool)                                     | **nr_nothelpful_understand**   | Note Ratings - Not Helpful - Hard to Understand   |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_trustsource**        | Tweet classified Trustworthy Source (bool)                         | **nr_nothelpful_argument**     | Note Ratings - Not Helpful - Argumentative        |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_misleading**     | Tweet classified Misinfo - Misleading                              | **nr_nothelpful_offtopic**     | Note Ratings - Not Helpful - Off Topic            |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_notfactual**     | Tweet classified Misinfo - Not Factual                             | **nr_nothelpful_spam**         | Note Ratings - Not Helpful - Spam                 |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_mediamanip**     | Tweet classified Misinfo - Media Manipulation                      | **nr_nothelpful_source_irrev** | Note Ratings - Not Helpful - Irrelevant           |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_outdated**       | Tweet classified Misinfo - Outdated                                | **nr_nothelpful_opinion_spec** | Note Ratings - Not Helpful - Opinion, Speculation |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_nocontext**      | Tweet classified Misinfo - No Context                              | **nr_nothelpful_nnn**          | Note Ratings - Not Helpful - No Note Needed       |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_unverified**     | Tweet classified Misinfo - Unverified                              | **twt_id**                     | Unique Tweet ID                                   |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_mis_satire**         | Tweet classified Misinfo - Satire                                  | **twt_url**                    | Unique Tweet URL                                  |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_notmis_other**       | Tweet classified Not Misinfo - Other                               | **twt_author_id**              | Unique Tweet Author ID                            |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_notmis_correct**     | Tweet classified Not Misinfo - Factually Correct                   | **twt_reply_author_id**        | Unique Reply-to Tweet Author ID                   |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_notmis_notoutdated** | Tweet classified Not Misinfo - Not Outdated                        | **twt_convo_id**               | Conversaion (Original Tweet) ID                   |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_notmis_satire**      | Tweet classified Not Misinfo - Satire                              | **twt_lang**                   | Tweet Language Code                               |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nt_class_notmis_opinion**     | Tweet classified Not Misinfo - Opinion                             | **twt_views**                  | Tweet Views Count                                 |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_ratings_ct**               | Note Ratings - Count of total Ratings                              | **twt_replies**                | Tweet Replies Count                               |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_rating_helpful**           | Note Ratings - Helpful (1.0)                                       | **twt_retweets**               | Tweet Retweets Count                              |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_rating_helpful_somewhat**  | Note Ratings - Somewhat Helpful (0.5)                              | **twt_likes**                  | Tweet Likes Count                                 |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_rating_helpful_not**       | Note Ratings - Not Helpful (-1.0)                                  | **twt_quotes**                 | Tweet Quotes Count                                |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_ratings_agg**              | Note Ratings - Weighted Sum - Custom Metric                        | **twt_is_retweet**             | Tweet is a Retweet (bool)                         |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_mean_agg**                 | Note Ratings - Mean of Weighted Sum - Custom Metric (-1 to +1)     | **twt_is_quote**               | Tweet is a Quote (bool)                           |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_polar_std**                | Note Ratings - Polarization (Standard) - Custom Metric (0 to 0.5)  | **user_follower_ct**           | Tweet Author Follower Count                       |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_polar_entropy**            | Note Ratings - Polarization (Entropy) - Custom Metric (0 to \~1.6) | **user_friend_ct**             | Tweet Author Friend Count                         |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_helpful_other**            | Note Ratings - Helpful - Other                                     | **user_blue**                  | Tweet Author is Blue (Premium Account)            |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_helpful_clear**            | Note Ratings - Helpful - Clear                                     | **user_created_dt**            | Tweet Author Account Creation Date                |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+
| **nr_helpful_empathy**          | Note Ratings - Helpful - Empathy                                   | **user_account_age**           | Tweet Author Account Age (days)                   |
+---------------------------------+--------------------------------------------------------------------+--------------------------------+---------------------------------------------------+

# References